services:
  database:
    image: postgres:16-alpine
    container_name: backend-database
    hostname: backend-database
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./backend/database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "postgres"]
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 10s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 20s

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: backend-rabbitmq
    hostname: backend-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./backend/database:/docker-entrypoint-initdb.d
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 20s

  worker:
    build:
      context: ./backend
      dockerfile: worker.Dockerfile
    image: todo-challenge-worker
    container_name: backend-worker
    hostname: backend-worker
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy

  api:
    build:
      context: ./backend
      dockerfile: api.Dockerfile
    image: todo-challenge-api
    container_name: backend-api
    hostname: backend-api
    env_file:
      - .env
    ports:
      - "8080:80"
    depends_on:
      worker:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8080/healthz",
        ]
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 10s

  app:
    build: ./frontend/app
    image: todo-challenge-app
    container_name: frontend-app
    hostname: frontend-app
    ports:
      - "8081:5000"
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8081",
        ]
      interval: 30s
      timeout: 3s
      retries: 20
      start_period: 10s
